apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SPRING_APPLICATION_NAME}
  labels:
    appName: ${SPRING_APPLICATION_NAME}
    env: ${SPRING_PROFILE_ACTIVE}
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      appName: ${SPRING_APPLICATION_NAME}
      env: ${SPRING_PROFILE_ACTIVE}
  template:
    metadata:
      labels:
        appName: ${SPRING_APPLICATION_NAME}
        env: ${SPRING_PROFILE_ACTIVE}
    spec:
      containers:
        - name: ${SPRING_APPLICATION_NAME}
          image: ${IMAGE}
          imagePullPolicy: Always
          env:
            - name: SPRING_APPLICATION_NAME      # 应用名称
              value: ${SPRING_APPLICATION_NAME}
            - name: SPRING_PROFILES_ACTIVE       # 指定激活环境
              value: ${SPRING_PROFILE_ACTIVE}
            - name: SERVER_PORT
              value: "8080"
            - name: MANAGEMENT_SERVER_PORT
              value: "8899"
          resources: # 容器资源管理
            limits: # 资源限制（监控使用情况）
              cpu: "1"
              memory: "3072Mi"
            requests: # 最小可用资源（灵活调度）
              cpu: "15M"
              memory: "300Mi"
          ports:
            - containerPort: 8080
          readinessProbe: # 就绪探针
            httpGet:
              path: /actuator/health/readiness
              port: ${MANAGEMENT_SERVER_PORT}
            initialDelaySeconds: 30      # 延迟加载时间
            periodSeconds: 3             # 重试时间间隔
            timeoutSeconds: 1            # 超时时间设置
            successThreshold: 1          # 健康阈值
            failureThreshold: 10         # 不健康阈值
          livenessProbe: # 存活探针
            httpGet:
              path: /actuator/health/liveness
              port: ${MANAGEMENT_SERVER_PORT}
            initialDelaySeconds: 30      # 延迟加载时间
            periodSeconds: 5             # 重试时间间隔
            timeoutSeconds: 1            # 超时时间设置
            successThreshold: 1          # 健康阈值
            failureThreshold: 5          # 不健康阈值