<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.7.16</version>
    </parent>

    <groupId>com.wind.middleware</groupId>
    <artifactId>wind-middleware</artifactId>
    <version>${revision}</version>
    <packaging>pom</packaging>

    <modules>
        <module>wind-server</module>
        <module>wind-core</module>
        <module>wind-common</module>
        <module>wind-security</module>
        <module>wind-config-center</module>
        <module>wind-web</module>
        <module>wind-tracer</module>
        <module>context-variable</module>
        <module>logback-kafka-appender</module>
        <module>modules/transaction</module>
        <module>wind-elasticjob</module>
        <module>wind-dependencies</module>
        <module>wind-sentinel</module>
        <module>wind-client</module>
        <module>wind-archetype</module>
        <module>tools</module>
        <module>modules/office</module>
        <module>modules/object-sensitive</module>
        <module>modules/payment</module>
        <module>modules/script</module>
        <module>modules/sequence-generate</module>
        <module>tests</module>
        <module>wind-rocketmq</module>
    </modules>

    <properties>
        <revision>1.0.9-SNAPSHOT</revision>
        <!--   占位使用     -->
        <jacoco-coverage-agent/>
        <tests.fork.count/>
        <tests.reuse.forks/>

        <!--1.8编译参数 保留方法名称-->
        <java.version>1.8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven-source-plugin.attach>false</maven-source-plugin.attach>

        <maven-flatten-plugin.version>1.5.0</maven-flatten-plugin.version>
        <maven-resources-plugin.version>3.3.0</maven-resources-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>3.1.0</maven-deploy-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>

        <spring-boot.version>2.7.16</spring-boot.version>
        <spring-cloud-commons.version>3.1.6</spring-cloud-commons.version>
        <spring-cloud-albaba.version>2021.0.5.0</spring-cloud-albaba.version>
        <rocketmq-spring-boot-starter.version>2.3.0</rocketmq-spring-boot-starter.version>
        <sentinel.version>1.8.7</sentinel.version>
        <mysql.version>8.0.33</mysql.version>
        <mybatis-flex.version>1.7.0</mybatis-flex.version>
        <commons-io.version>2.13.0</commons-io.version>
        <commons-lang3.version>3.10</commons-lang3.version>
        <commons-text.version>1.10.0</commons-text.version>
        <mybatis.version>3.5.13</mybatis.version>
        <mapstruct.version>1.5.5.Final</mapstruct.version>
        <redisson.version>3.18.0</redisson.version>
        <kryo.version>5.3.0</kryo.version>
        <elasticjob.version>3.0.2</elasticjob.version>
        <dynamic-tp.version>1.1.5</dynamic-tp.version>
        <guava.version>32.0.1-jre</guava.version>
        <fastjson2.version>2.0.49</fastjson2.version>
        <javet.version>3.1.2</javet.version>
        <google-zxing.version>3.5.2</google-zxing.version>
        <freemarker.version>2.3.32</freemarker.version>
        <logback-encoder.version>7.4</logback-encoder.version>
        <retrofit.version>2.9.0</retrofit.version>

        <alipay-sdk.version>4.38.90.ALL</alipay-sdk.version>
        <weixin-java-pay.version>4.5.0</weixin-java-pay.version>
        <easyexcel.version>3.3.2</easyexcel.version>
        <swagger-openapiv3.version>2.2.9</swagger-openapiv3.version>
        <springdoc-openapi-ui.version>1.7.0</springdoc-openapi-ui.version>
        <googleauth.version>1.5.0</googleauth.version>
        <bcprov.version>1.77</bcprov.version>
        <jetbrains-annotations.version>24.1.0</jetbrains-annotations.version>
        <podam.version>7.2.11.RELEASE</podam.version>
        <awaitility.version>4.2.0</awaitility.version>
        <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-commons-dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-commons-dependencies</artifactId>
                <version>${spring-cloud-commons.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.mybatis-flex/mybatis-flex-dependencies -->
            <dependency>
                <groupId>com.mybatis-flex</groupId>
                <artifactId>mybatis-flex-dependencies</artifactId>
                <version>${mybatis-flex.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-alibaba-dependencies -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-albaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.apache.rocketmq/rocketmq-spring-boot-starter -->
            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-spring-boot-starter</artifactId>
                <version>${rocketmq-spring-boot-starter.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-prometheus-metric-exporter</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.tools</groupId>
                <artifactId>mybatis-plus-annotation-processor</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.tools</groupId>
                <artifactId>wind-mybatis-flex-processor</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.tools</groupId>
                <artifactId>mybatis-flex-codegen</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.tools</groupId>
                <artifactId>h2-functions-for-mysql</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>logback-kafka-appender</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-config-center-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-nacos-spring-cloud-config-starter</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-elasticjob</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-script</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.office</groupId>
                <artifactId>wind-office-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.office</groupId>
                <artifactId>wind-office-excel</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.payment</groupId>
                <artifactId>wind-payment-plugin-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.payment</groupId>
                <artifactId>wind-payment-plugin-alipay</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.payment</groupId>
                <artifactId>wind-payment-plugin-wechat</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-common</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-object-sensitive</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-server</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-web</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.security</groupId>
                <artifactId>wind-security-core</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.security</groupId>
                <artifactId>wind-security-captcha</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.security</groupId>
                <artifactId>wind-security-authentication</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.security</groupId>
                <artifactId>wind-security-mfa</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-sequence-generate</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.client</groupId>
                <artifactId>wind-restful</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.client</groupId>
                <artifactId>wind-retrofit</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-tracer</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-sentinel</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-rocketmq</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-context-annotations</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>com.wind.middleware</groupId>
                <artifactId>wind-context-injection</artifactId>
                <version>${revision}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${google-zxing.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba.fastjson2</groupId>
                <artifactId>fastjson2</artifactId>
                <version>${fastjson2.version}</version>
            </dependency>
            <!-- Linux and Windows (x86_64) -->
            <dependency>
                <groupId>com.caoccao.javet</groupId>
                <artifactId>javet</artifactId>
                <version>${javet.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- Linux (arm64) -->
            <dependency>
                <groupId>com.caoccao.javet</groupId>
                <artifactId>javet-linux-arm64</artifactId>
                <version>${javet.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- Mac OS (x86_64 and arm64) -->
            <dependency>
                <groupId>com.caoccao.javet</groupId>
                <artifactId>javet-macos</artifactId>
                <version>${javet.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alipay.sdk/alipay-sdk-java -->
            <dependency>
                <groupId>com.alipay.sdk</groupId>
                <artifactId>alipay-sdk-java</artifactId>
                <version>${alipay-sdk.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.github.binarywang/weixin-java-pay -->
            <dependency>
                <groupId>com.github.binarywang</groupId>
                <artifactId>weixin-java-pay</artifactId>
                <version>${weixin-java-pay.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.freemarker/freemarker -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logback-encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere.elasticjob</groupId>
                <artifactId>elasticjob-lite-spring-boot-starter</artifactId>
                <version>${elasticjob.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>${jetbrains-annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere.elasticjob</groupId>
                <artifactId>elasticjob-lite-spring-namespace</artifactId>
                <version>    ${elasticjob.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.dromara.dynamictp/dynamic-tp-adapter-common -->
            <dependency>
                <groupId>org.dromara.dynamictp</groupId>
                <artifactId>dynamic-tp-spring-cloud-starter-nacos</artifactId>
                <version>${dynamic-tp.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core -->
            <dependency>
                <groupId>com.alibaba.csp</groupId>
                <artifactId>sentinel-core</artifactId>
                <version>${sentinel.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>retrofit</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.squareup.retrofit2</groupId>
                <artifactId>converter-jackson</artifactId>
                <version>${retrofit.version}</version>
            </dependency>
            <dependency>
                <groupId>com.warrenstrange</groupId>
                <artifactId>googleauth</artifactId>
                <version>${googleauth.version}</version>
            </dependency>
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>${swagger-openapiv3.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>${springdoc-openapi-ui.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk18on -->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bcprov.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-ext-jdk18on</artifactId>
                <version>${bcprov.version}</version>
            </dependency>
            <dependency>
                <groupId>uk.co.jemos.podam</groupId>
                <artifactId>podam</artifactId>
                <version>${podam.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- https://mvnrepository.com/artifact/org.awaitility/awaitility -->
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>flatten-maven-plugin</artifactId>
                    <version>${maven-flatten-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>${jacoco-coverage-agent}</argLine>
                    <includes>
                        <include>**/*Test.java</include>
                        <include>**/*Tests.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/Abstract*.java</exclude>
                        <exclude>**/Base*.java</exclude>
                    </excludes>
                    <systemPropertyVariables>
                        <property>
                            <name>junit.jupiter.extensions.autodetection.enabled</name>
                            <value>true</value>
                        </property>
                    </systemPropertyVariables>
                    <forkCount>${tests.fork.count}</forkCount>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit-jupiter.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <executions>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/*Test.java</include>
                                <include>**/*Tests.java</include>
                            </includes>
                            <excludes>
                                <exclude>**/Abstract*.java</exclude>
                                <exclude>**/Base*.java</exclude>
                            </excludes>
                            <reuseForks>true</reuseForks>
                            <!-- When running as a Maven plugin, the JaCoCo agent configuration is prepared by invoking the prepare-agent
                            or prepare-agent-integration goals, before the actual tests are run. This sets a property named argLine which
                            points to the JaCoCo agent, later passed as a JVM argument to the test runner -->
                            <argLine>${jacoco-coverage-agent}</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- jacoco agent for code coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- prepare agent before integration tests -->
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <propertyName>jacocoCoverageAgent</propertyName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>编译时保留方法参数名称</id>
            <activation>
                <jdk>1.8</jdk>
            </activation>
            <properties>
                <!--1.8编译参数-保留方法名称-->
                <compilerArgument>-parameters</compilerArgument>
            </properties>
        </profile>
        <profile>
            <id>测试覆盖率采集</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>report-aggregate</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>report-aggregate</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/site/jacoco</outputDirectory>
                                </configuration>
                            </execution>
                            <execution>
                                <id>merge-results</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>merge</goal>
                                </goals>
                                <configuration>
                                    <fileSets>
                                        <fileSet>
                                            <directory>target/</directory>
                                            <includes>
                                                <include>**/target/jacoco.exec</include>
                                            </includes>
                                        </fileSet>
                                    </fileSets>
                                    <destFile>target/aggregate.exec</destFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>Surefire-Tests-2c</id>
            <properties>
                <tests.fork.count>2C</tests.fork.count>
            </properties>
        </profile>
        <profile>
            <id>Surefire-Tests-Default</id>
            <properties>
                <tests.fork.count>1</tests.fork.count>
            </properties>
        </profile>
        <profile>
            <id>跳过测试</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <maven.test.skip>true</maven.test.skip>
            </properties>
        </profile>
        <profile>
            <id>发布版本</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <configuration>
                            <delimiters>
                                <delimiter>${*}</delimiter>
                                <delimiter>@{*}</delimiter>
                            </delimiters>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>flatten-maven-plugin</artifactId>
                        <configuration>
                            <!--    是否更新pom文件 -->
                            <updatePomFile>true</updatePomFile>
                            <flattenMode>resolveCiFriendliesOnly</flattenMode>
                        </configuration>
                        <executions>
                            <execution>
                                <id>flatten</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>flatten</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>flatten.clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <debug>true</debug>
                            <compilerArgument>${compilerArgument}</compilerArgument>
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                            <encoding>UTF-8</encoding>
                        </configuration>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!--源码上传到 maven-->
                            <attach>true</attach>
                        </configuration>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>pl.project13.maven</groupId>
                        <artifactId>git-commit-id-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>get-the-git-infos</id>
                                <!-- 默认绑定阶段initialize -->
                                <phase>initialize</phase>
                                <goals>
                                    <!-- 目标：revision -->
                                    <goal>revision</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- 检查的仓库根目录，${project.basedir}：项目根目录，即包含pom.xml文件的目录 -->
                            <!-- 定义插件中所有时间格式，默认值：yyyy-MM-dd’T’HH:mm:ssZ -->
                            <dateFormat>yyyy-MM-dd HH:mm:ss</dateFormat>
                            <!-- 生成git属性文件，默认false：不生成 -->
                            <generateGitPropertiesFile>true</generateGitPropertiesFile>
                            <!-- 生成git属性文件路径及文件名，默认${project.build.outputDirectory}/git.properties -->
                            <generateGitPropertiesFilename>
                                ${project.build.outputDirectory}/META-INF/${project.artifactId}/git.properties
                            </generateGitPropertiesFilename>
                            <includeOnlyProperties>
                                <property>git.branch</property>
                                <property>git.build.time</property>
                                <property>git.build.version</property>
                                <property>git.commit.id</property>
                                <property>git.commit.id.abbrev</property>
                                <property>git.commit.time</property>
                            </includeOnlyProperties>
                            <!-- 配置git-describe命令 -->
                            <gitDescribe>
                                <skip>false</skip>
                                <always>false</always>
                                <dirty>-dirty</dirty>
                            </gitDescribe>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <organization>
        <name>wupxp</name>
        <url>https://github.com/fengwuxp</url>
    </organization>

    <developers>
        <developer>
            <id>fengwuxp</id>
        </developer>
    </developers>

</project>